"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.router = void 0;
const express_1 = require("express");
const express_validator_1 = require("express-validator");
const registration_controller_1 = require("../controllers/registration-controller");
const login_controller_1 = require("../controllers/login-controller");
const refresh_controller_1 = require("../controllers/refresh-controller");
const logout_controller_1 = require("../controllers/logout-controller");
const delete_controller_1 = require("../controllers/delete-controller");
const changePassword_controller_1 = require("../controllers/changePassword-controller");
const editUser_controller_1 = require("../controllers/editUser-controller");
const post_controller_1 = require("../controllers/post-controller");
const like_controller_1 = require("../controllers/like-controller");
const avatar_controller_1 = require("../controllers/avatar-controller");
const conversation_controller_1 = require("../controllers/conversation-controller");
const message_controller_1 = require("../controllers/message-controller");
const user_controller_1 = require("../controllers/user-controller");
const friendRequest_controller_1 = require("../controllers/friendRequest-controller");
const multerMiddleware = require("../middlewares/multer-middleware");
const multerAvatarMiddleware = require("../middlewares/multerAvatar-middleware");
process.setMaxListeners(0);
exports.router = (0, express_1.Router)();
exports.router.post("/registration", (0, express_validator_1.body)("email").isEmail(), (0, express_validator_1.body)("password").isLength({ min: 3, max: 16 }), registration_controller_1.RegistrationController.registration);
exports.router.post("/login", login_controller_1.LoginController.login);
exports.router.post("/logout", logout_controller_1.LogoutController.logout);
exports.router.post("/delete", delete_controller_1.DeleteController.delete);
exports.router.post("/like", like_controller_1.LikeController.like);
exports.router.post("/avatar", multerAvatarMiddleware.single("image"), avatar_controller_1.AvatarController.save);
exports.router.post("/messenger/conversation", conversation_controller_1.ConversetionController.conversation);
exports.router.post("/messenger/delete", conversation_controller_1.ConversetionController.deleteConversation);
exports.router.post("/messenger/message", message_controller_1.MessageController.message);
exports.router.get("/messenger/message/:conversationId", message_controller_1.MessageController.getMessages);
exports.router.get("/messenger/:userId", conversation_controller_1.ConversetionController.getConversations);
exports.router.post("/friend/request", friendRequest_controller_1.FriendRequestController.request);
exports.router.post("/friend/accept", friendRequest_controller_1.FriendRequestController.accept);
exports.router.post("/friend/decline", friendRequest_controller_1.FriendRequestController.decline);
exports.router.post("/friend/delete", friendRequest_controller_1.FriendRequestController.delete);
exports.router.get("/friend/requests/:receiverId", friendRequest_controller_1.FriendRequestController.getRequests);
exports.router.get("/profile/:userId", user_controller_1.UserController.getUserInfo);
exports.router.get("/refresh", refresh_controller_1.RefreshController.refresh);
exports.router.post("/post", post_controller_1.PostController.create);
exports.router.post("/post/comment", post_controller_1.PostController.comment);
exports.router.post("/post/delete", post_controller_1.PostController.delete);
exports.router.post("/post/upload", multerMiddleware.single("files"), (req, res) => {
    res.json({ path: req.file.path });
});
exports.router.get("/post/id/:userId", post_controller_1.PostController.getAllUserPostsByUserId);
exports.router.get("/post/all", post_controller_1.PostController.getAllPosts);
exports.router.patch("/post/edit", post_controller_1.PostController.edit);
exports.router.post("/user/block", user_controller_1.UserController.blockUser);
exports.router.post("/user/unblock", user_controller_1.UserController.unblockUser);
exports.router.patch("/changePassword", (0, express_validator_1.body)("newPassword").isLength({ min: 3, max: 16 }), changePassword_controller_1.ChangePasswordController.edit);
exports.router.patch("/editInfo", editUser_controller_1.EditUserController.editUser);
exports.router.get("/users/", user_controller_1.UserController.getUsers);
//# sourceMappingURL=routes.js.map